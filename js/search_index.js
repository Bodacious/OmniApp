var search_data = {"index":{"searchIndex":["list","item","itemset","add_item()","done?()","new()","new()","new()","new_instance()","pending_items()","refresh()","refresh()","refresh()","remove_item()","repeatable?()","repeatable_items()","toggle_done()","toggle_repeatable()","undo()","readme"],"longSearchIndex":["list","list::item","list::itemset","list#add_item()","list::item#done?()","list::new()","list::item::new()","list::itemset::new()","list::item#new_instance()","list::itemset#pending_items()","list#refresh()","list::item#refresh()","list::itemset#refresh()","list#remove_item()","list::item#repeatable?()","list::itemset#repeatable_items()","list::item#toggle_done()","list::item#toggle_repeatable()","list::item#undo()",""],"info":[["List","","List.html","","<p>A List is a single place to store a group of related tasks or reminders\n"],["List::Item","","List/Item.html","","<p>A List::Item represents one item on a list that can be marked as “done” when complete.\n"],["List::ItemSet","","List/ItemSet.html","","<p>A set of List::Items that belong to a given List\n"],["add_item","List","List.html#method-i-add_item","(item)","<p>Add an item to this list @param [List::Item] item\n"],["done?","List::Item","List/Item.html#method-i-done-3F","(= @done)","<p>Has this item been marked as done? @return [Boolean]\n"],["new","List","List.html#method-c-new","(**attributes)",""],["new","List::Item","List/Item.html#method-c-new","(**attributes)",""],["new","List::ItemSet","List/ItemSet.html#method-c-new","()",""],["new_instance","List::Item","List/Item.html#method-i-new_instance","()",""],["pending_items","List::ItemSet","List/ItemSet.html#method-i-pending_items","()",""],["refresh","List","List.html#method-i-refresh","()",""],["refresh","List::Item","List/Item.html#method-i-refresh","()",""],["refresh","List::ItemSet","List/ItemSet.html#method-i-refresh","()",""],["remove_item","List","List.html#method-i-remove_item","(item)","<p>Remove an item from this list @param [List::Item] item\n"],["repeatable?","List::Item","List/Item.html#method-i-repeatable-3F","(= @repeatable)","<p>Should this item be added to the list when refreshed? @return [Boolean]\n"],["repeatable_items","List::ItemSet","List/ItemSet.html#method-i-repeatable_items","()",""],["toggle_done","List::Item","List/Item.html#method-i-toggle_done","()","<p>Toggle the value of <code>done?</code> @return [Boolean]\n"],["toggle_repeatable","List::Item","List/Item.html#method-i-toggle_repeatable","()","<p>Toggle the value of <code>repeatable?</code> @return [Boolean]\n"],["undo","List::Item","List/Item.html#method-i-undo","()",""],["README","","README_md.html","","<p>OmniApp\n<p><img src=\"https://github.com/Bodacious/OmniApp/actions/workflows/ruby.yml/badge.svg\">\n<p>Demonstrating …\n"]]}}